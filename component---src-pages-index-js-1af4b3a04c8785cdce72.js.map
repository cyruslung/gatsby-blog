{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/post-preview.js","webpack:///./src/pages/index.js"],"names":["Layout","props","children","className","PostPreview","post","data","to","slug","title","subTitle","author","name","publishDate","IndexPage","useState","chunk","setChunk","head","allContentfulHead","edges","node","posts","allContentfulPost","postBoby","slice","map","key","style","backgroundImage","image","file","url","display","length","onClick","indexQuery"],"mappings":"2FAAA,6CAmBeA,IAdA,SAACC,GAAD,OACb,oCACGA,EAAMC,SACP,gCACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,8BACb,uBAAGA,UAAU,wBAAb,wC,sGCQGC,EAlBK,SAACH,GACnB,IAAMI,EAAOJ,EAAMK,KACnB,OACA,oCACE,yBAAKH,UAAU,gBACb,kBAAC,OAAD,CAAMI,GAAE,SAAWF,EAAKG,MACtB,wBAAIL,UAAU,cACbE,EAAKI,OAEN,wBAAIN,UAAU,iBACbE,EAAKK,WAGR,uBAAGP,UAAU,aAAb,aAAoCE,EAAKM,OAAOC,KAAhD,OAA0DP,EAAKQ,cAEjE,+BCjBJ,2CA8CeC,UA1CG,SAACb,GAAU,MAKDc,mBAAS,GAA5BC,EALoB,KAKbC,EALa,KAMrBC,EAAOjB,EAAMK,KAAKa,kBAAkBC,MAAM,GAAGC,KAC7CC,EAAQrB,EAAMK,KAAKiB,kBAAkBH,MACrCI,EAAWF,EAAMG,MAAM,EAAG,EAAET,GAAOU,KAAI,SAACrB,GAAD,OAAQ,kBAAC,EAAD,CAAasB,IAAKtB,EAAKgB,KAAKb,KAAMF,KAAMD,EAAKgB,UAElG,OACA,kBAAC,IAAD,KACE,4BAAQlB,UAAU,WAAWyB,MAAO,CAACC,gBAAgB,QAASX,EAAKY,MAAMC,KAAKC,IAA1B,OAClD,yBAAK7B,UAAU,YACf,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,gBACb,4BAAKe,EAAKT,OACV,0BAAMN,UAAU,cAAce,EAAKR,eAM7C,yBAAKP,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,8BACZqB,EAED,yBAAKrB,UAAU,WAAWyB,MAAO,CAACK,QAAS,EAAEjB,EAAMM,EAAMY,OAAS,QAAU,SAE1E,uBAAG/B,UAAU,8BAA8BgC,QAAS,kBAAMlB,EAASD,EAAQ,KAA3E,qBAMR,+BAtCJ,IA4CaoB,EAAU","file":"component---src-pages-index-js-1af4b3a04c8785cdce72.js","sourcesContent":["import React from \"react\"\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport '../scss/clean-blog.scss'\r\n\r\nconst Layout = (props) => (\r\n  <>\r\n    {props.children}\r\n    <footer>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8 col-md-10 mx-auto\">\r\n            <p className=\"copyright text-muted\">Copyright &copy; Your Website 2019</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  </>\r\n)\r\nexport default Layout","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nconst PostPreview = (props) => {\r\n  const post = props.data\r\n  return (\r\n  <>\r\n    <div className=\"post-preview\">\r\n      <Link to={`/blog/${post.slug}`}>\r\n        <h2 className=\"post-title\">\r\n        {post.title}\r\n        </h2>\r\n        <h3 className=\"post-subtitle\">\r\n        {post.subTitle}\r\n        </h3>\r\n      </Link>\r\n      <p className=\"post-meta\">Posted by {post.author.name} on {post.publishDate}</p>\r\n    </div>\r\n    <hr/>\r\n  </>\r\n)}\r\nexport default PostPreview\r\n\r\n","import React, { useState } from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport PostPreview from \"../components/post-preview\"\r\n\r\nconst IndexPage = (props) => {\r\n  /*\r\n    使用useState這個hook，將chunk訂為state，並且setChunk為更改chunk的函式。\r\n    postBoby根據chunk*5的數量來顯示文章，每按一次按鈕，多5篇文章。\r\n  */\r\n  const [chunk, setChunk] = useState(1)\r\n  const head = props.data.allContentfulHead.edges[0].node\r\n  const posts = props.data.allContentfulPost.edges\r\n  const postBoby = posts.slice(0, 5*chunk).map((post)=><PostPreview key={post.node.slug} data={post.node}/>)\r\n\r\n  return (\r\n  <Layout>\r\n    <header className=\"masthead\" style={{backgroundImage: `url('${head.image.file.url}')`}}>\r\n      <div className=\"overlay\"></div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8 col-md-10 mx-auto\">\r\n            <div className=\"site-heading\">\r\n              <h1>{head.title}</h1>\r\n              <span className=\"subheading\">{head.subTitle}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-8 col-md-10 mx-auto\">\r\n          {postBoby}\r\n          {/* 根據顯示的文章數是否小於總文章數，來決定按鈕是否顯示 */}\r\n          <div className=\"clearfix\" style={{display: 5*chunk<posts.length ? 'block' : 'none' }}>\r\n            {/* 按下按鈕，觸發setChunk，將chunk變為chunk+1，並且因為state改變，因此組件觸發重新渲染 */}\r\n            <a className=\"btn btn-primary float-right\" onClick={() => setChunk(chunk + 1)}>Older Posts &rarr;</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <hr/>\r\n  </Layout>\r\n)}\r\n\r\nexport default IndexPage\r\n\r\nexport const indexQuery = graphql`\r\nquery indexQuery {\r\n  allContentfulHead {\r\n    edges {\r\n      node {\r\n        image {\r\n          file {\r\n            url\r\n          }\r\n        }\r\n        title\r\n        subTitle\r\n      }\r\n    }\r\n  }\r\n  allContentfulPost(sort: { fields: [publishDate], order: DESC }) {\r\n    edges {\r\n      node {\r\n        slug\r\n        title\r\n        subTitle\r\n        publishDate(formatString: \"MMMM Do, YYYY\")\r\n        author {\r\n          name\r\n        }\r\n        body {\r\n          childMarkdownRemark {\r\n            excerpt\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n"],"sourceRoot":""}